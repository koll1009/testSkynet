// Generated by tabtoy
// Version: 2.8.11
// DO NOT EDIT!!
using System.Collections.Generic;

namespace NasData
{
	
	

	// Defined in table: SpecialDropControl
	
	public partial class SpecialDropControl : tabtoy._BaseConfig
	{
	
		public tabtoy.Logger TableLogger = new tabtoy.Logger();
	
		
		/// <summary> 
		/// SpecialDropControl
		/// </summary>
		public List<SpecialDropControlDefine> Datas = new List<SpecialDropControlDefine>(); 
	
	
		#region Index code
	 	Dictionary<string, SpecialDropControlDefine> _ByID = new Dictionary<string, SpecialDropControlDefine>();
        public SpecialDropControlDefine GetByID(string ID, SpecialDropControlDefine def = default(SpecialDropControlDefine))
        {
            SpecialDropControlDefine ret;
            if ( _ByID.TryGetValue( ID, out ret ) )
            {
                return ret;
            }
			
			if ( def == default(SpecialDropControlDefine) )
			{
				TableLogger.ErrorLine("GetByID failed, ID: {0}", ID);
			}

            return def;
        }
		
	
		#endregion
		#region Deserialize code
		public override void Deserialize(System.IO.Stream stream)
        {
            Deserialize(this, stream);
        }
		
		public static void Deserialize( SpecialDropControl ins, System.IO.Stream stream )
        {
            tabtoy.DataReader reader = new tabtoy.DataReader(stream);
            if (!reader.ReadHeader())
            {
                throw new System.Exception(string.Format("Deserialize failed: {0}", ins.GetType()));
            }
            Deserialize(ins, reader);
        }
		static tabtoy.DeserializeHandler<SpecialDropControl> _SpecialDropControlDeserializeHandler;
		static tabtoy.DeserializeHandler<SpecialDropControl> SpecialDropControlDeserializeHandler
		{
			get
			{
				if (_SpecialDropControlDeserializeHandler == null )
				{
					_SpecialDropControlDeserializeHandler = new tabtoy.DeserializeHandler<SpecialDropControl>(Deserialize);
				}

				return _SpecialDropControlDeserializeHandler;
			}
		}
		public static void Deserialize( SpecialDropControl ins, tabtoy.DataReader reader )
		{
			
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0xa0000:
                	{
						ins.Datas.Add( reader.ReadStruct<SpecialDropControlDefine>(SpecialDropControlDefineDeserializeHandler) );
                	}
                	break; 
                }
             } 

			
			// Build SpecialDropControl Index
			for( int i = 0;i< ins.Datas.Count;i++)
			{
				var element = ins.Datas[i];
				
				ins._ByID.Add(element.ID, element);
				
			}
			
		}
		public static void Deserialize( SpecialDropControlDefine ins, System.IO.Stream stream )
        {
            tabtoy.DataReader reader = new tabtoy.DataReader(stream);
            if (!reader.ReadHeader())
            {
                throw new System.Exception(string.Format("Deserialize failed: {0}", ins.GetType()));
            }
            Deserialize(ins, reader);
        }
		static tabtoy.DeserializeHandler<SpecialDropControlDefine> _SpecialDropControlDefineDeserializeHandler;
		static tabtoy.DeserializeHandler<SpecialDropControlDefine> SpecialDropControlDefineDeserializeHandler
		{
			get
			{
				if (_SpecialDropControlDefineDeserializeHandler == null )
				{
					_SpecialDropControlDefineDeserializeHandler = new tabtoy.DeserializeHandler<SpecialDropControlDefine>(Deserialize);
				}

				return _SpecialDropControlDefineDeserializeHandler;
			}
		}
		public static void Deserialize( SpecialDropControlDefine ins, tabtoy.DataReader reader )
		{
			
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0x60000:
                	{
						ins.ID = reader.ReadString();
                	}
                	break; 
                	case 0x10001:
                	{
						ins.SeedType = reader.ReadInt32();
                	}
                	break; 
                	case 0x10002:
                	{
						ins.max = reader.ReadInt32();
                	}
                	break; 
                	case 0x10003:
                	{
						ins.DailyDropLimit = reader.ReadInt32();
                	}
                	break; 
                	case 0x10004:
                	{
						ins.DropLimit = reader.ReadInt32();
                	}
                	break; 
                	case 0x10005:
                	{
						ins.MemoryLimit = reader.ReadInt32();
                	}
                	break; 
                }
             } 

			
		}
		#endregion
	

	} 

	// Defined in table: SpecialDropControlDefine
	[System.Serializable]
	public partial class SpecialDropControlDefine : tabtoy._BaseConfig
	{
	
		
		/// <summary> 
		/// 唯一ID（索引加MakeIndex:true）
		/// </summary>
		public string ID = ""; 
		
		/// <summary> 
		/// 种子类型
		///1个人  即单人的次数
		///2全服  即服务器内所有人共用的掉落次数
		/// </summary>
		public int SeedType = 0; 
		
		/// <summary> 
		/// 种子掉落次数
		/// </summary>
		public int max = 0; 
		
		/// <summary> 
		/// 每日掉落上限
		///填0代表无上限
		/// </summary>
		public int DailyDropLimit = 0; 
		
		/// <summary> 
		/// 掉落上限
		///填0代表无上限
		/// </summary>
		public int DropLimit = 0; 
		
		/// <summary> 
		/// 存量上限
		///填0代表无上限
		/// </summary>
		public int MemoryLimit = 0; 
	
	

	} 

}
